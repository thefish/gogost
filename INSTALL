Preferable way is to download tarball with the signature from official
website and, for example, run tests with benchmarks:

    $ wget http://gogost.cypherpunks.ru/gogost-4.1.0.tar.xz
    $ wget http://gogost.cypherpunks.ru/gogost-4.1.0.tar.xz.sig
    $ gpg --verify gogost-4.1.0.tar.xz.sig gogost-4.1.0.tar.xz
    $ xz -d < gogost-4.1.0.tar.xz | tar xf -
    $ make -C gogost-4.1.0 all bench
    $ echo hello world | ./gogost-4.1.0/streebog256
    f72018189a5cfb803dbe1f2149cf554c40093d8e7f81c21e08ac5bcd09d9934d

And then you can include its source code in your project for example
like this:

    $ mkdir -p myproj/src
    $ cp -r gogost-4.1.0/src/go.cypherpunks.ru myproj/src
    $ export GOPATH=$PWD/myproj
    $ cd myproj/src
    $ cat > main.go <<EOF
    package main

    import (
        "encoding/hex"
        "fmt"

        "go.cypherpunks.ru/gogost/v4/gost34112012256"
    )

    func main() {
        h := gost34112012256.New()
        h.Write([]byte("hello world\n"))
        fmt.Println(hex.EncodeToString(h.Sum(nil)))
    }
    EOF
    $ go run main.go
    f72018189a5cfb803dbe1f2149cf554c40093d8e7f81c21e08ac5bcd09d9934d

GoGOST is also go-get-able. For example to use streebog256 utility:

    $ go get go.cypherpunks.ru/gogost/cmd/streebog256

You have to verify downloaded tarballs integrity and authenticity to be
sure that you retrieved trusted and untampered software. GNU Privacy
Guard is used for that purpose.

For the very first time it is necessary to get signing public key and
import it. It is provided below, but you should check alternative
resources.

    pub   rsa2048/0x82343436696FC85A 2016-09-13 [SC]
          CEBD 1282 2C46 9C02 A81A  0467 8234 3436 696F C85A
    uid   GoGOST releases <gogost at cypherpunks dot ru>

    Look in PUBKEY.asc file.
    $ gpg --auto-key-locate dane --locate-keys gogost at cypherpunks dot ru
    $ gpg --auto-key-locate wkd --locate-keys gogost at cypherpunks dot ru
